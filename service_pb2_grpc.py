# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import service_pb2 as service__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AuthServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AuthenticateUser = channel.unary_unary(
                '/AuthService/AuthenticateUser',
                request_serializer=service__pb2.AuthenticateUserRequest.SerializeToString,
                response_deserializer=service__pb2.AuthenticateUserResponse.FromString,
                _registered_method=True)


class AuthServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AuthenticateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AuthenticateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthenticateUser,
                    request_deserializer=service__pb2.AuthenticateUserRequest.FromString,
                    response_serializer=service__pb2.AuthenticateUserResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'AuthService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('AuthService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AuthService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AuthenticateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/AuthService/AuthenticateUser',
            service__pb2.AuthenticateUserRequest.SerializeToString,
            service__pb2.AuthenticateUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class StudentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStudentData = channel.unary_unary(
                '/StudentService/GetStudentData',
                request_serializer=service__pb2.StudentDataRequest.SerializeToString,
                response_deserializer=service__pb2.StudentDataResponse.FromString,
                _registered_method=True)
        self.UpdateStudentData = channel.unary_unary(
                '/StudentService/UpdateStudentData',
                request_serializer=service__pb2.StudentUpdateRequest.SerializeToString,
                response_deserializer=service__pb2.StudentUpdateResponse.FromString,
                _registered_method=True)
        self.CreateStudentData = channel.unary_unary(
                '/StudentService/CreateStudentData',
                request_serializer=service__pb2.StudentCreateRequest.SerializeToString,
                response_deserializer=service__pb2.StudentCreateResponse.FromString,
                _registered_method=True)
        self.UpdateStudentPaymentId = channel.unary_unary(
                '/StudentService/UpdateStudentPaymentId',
                request_serializer=service__pb2.StudentUpdatePaymentIdRequest.SerializeToString,
                response_deserializer=service__pb2.StudentUpdateResponse.FromString,
                _registered_method=True)
        self.DeleteStudentById = channel.unary_unary(
                '/StudentService/DeleteStudentById',
                request_serializer=service__pb2.StudentDeleteRequest.SerializeToString,
                response_deserializer=service__pb2.StudentUpdateResponse.FromString,
                _registered_method=True)
        self.GetStudentByName = channel.unary_unary(
                '/StudentService/GetStudentByName',
                request_serializer=service__pb2.StudentSearchRequest.SerializeToString,
                response_deserializer=service__pb2.StudentDataResponse.FromString,
                _registered_method=True)


class StudentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetStudentData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateStudentData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateStudentData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateStudentPaymentId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteStudentById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStudentByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StudentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStudentData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStudentData,
                    request_deserializer=service__pb2.StudentDataRequest.FromString,
                    response_serializer=service__pb2.StudentDataResponse.SerializeToString,
            ),
            'UpdateStudentData': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateStudentData,
                    request_deserializer=service__pb2.StudentUpdateRequest.FromString,
                    response_serializer=service__pb2.StudentUpdateResponse.SerializeToString,
            ),
            'CreateStudentData': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateStudentData,
                    request_deserializer=service__pb2.StudentCreateRequest.FromString,
                    response_serializer=service__pb2.StudentCreateResponse.SerializeToString,
            ),
            'UpdateStudentPaymentId': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateStudentPaymentId,
                    request_deserializer=service__pb2.StudentUpdatePaymentIdRequest.FromString,
                    response_serializer=service__pb2.StudentUpdateResponse.SerializeToString,
            ),
            'DeleteStudentById': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteStudentById,
                    request_deserializer=service__pb2.StudentDeleteRequest.FromString,
                    response_serializer=service__pb2.StudentUpdateResponse.SerializeToString,
            ),
            'GetStudentByName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStudentByName,
                    request_deserializer=service__pb2.StudentSearchRequest.FromString,
                    response_serializer=service__pb2.StudentDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'StudentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('StudentService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class StudentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetStudentData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/StudentService/GetStudentData',
            service__pb2.StudentDataRequest.SerializeToString,
            service__pb2.StudentDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateStudentData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/StudentService/UpdateStudentData',
            service__pb2.StudentUpdateRequest.SerializeToString,
            service__pb2.StudentUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateStudentData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/StudentService/CreateStudentData',
            service__pb2.StudentCreateRequest.SerializeToString,
            service__pb2.StudentCreateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateStudentPaymentId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/StudentService/UpdateStudentPaymentId',
            service__pb2.StudentUpdatePaymentIdRequest.SerializeToString,
            service__pb2.StudentUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteStudentById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/StudentService/DeleteStudentById',
            service__pb2.StudentDeleteRequest.SerializeToString,
            service__pb2.StudentUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStudentByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/StudentService/GetStudentByName',
            service__pb2.StudentSearchRequest.SerializeToString,
            service__pb2.StudentDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class StateServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStateData = channel.unary_unary(
                '/StateService/GetStateData',
                request_serializer=service__pb2.StatesDataRequest.SerializeToString,
                response_deserializer=service__pb2.StatesListDataResponse.FromString,
                _registered_method=True)
        self.GetStateDataById = channel.unary_unary(
                '/StateService/GetStateDataById',
                request_serializer=service__pb2.StateDataRequestById.SerializeToString,
                response_deserializer=service__pb2.StateResponse.FromString,
                _registered_method=True)


class StateServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetStateData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStateDataById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StateServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStateData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStateData,
                    request_deserializer=service__pb2.StatesDataRequest.FromString,
                    response_serializer=service__pb2.StatesListDataResponse.SerializeToString,
            ),
            'GetStateDataById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStateDataById,
                    request_deserializer=service__pb2.StateDataRequestById.FromString,
                    response_serializer=service__pb2.StateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'StateService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('StateService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class StateService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetStateData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/StateService/GetStateData',
            service__pb2.StatesDataRequest.SerializeToString,
            service__pb2.StatesListDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStateDataById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/StateService/GetStateDataById',
            service__pb2.StateDataRequestById.SerializeToString,
            service__pb2.StateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class GenderServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetGenderData = channel.unary_unary(
                '/GenderService/GetGenderData',
                request_serializer=service__pb2.GendersDataRequest.SerializeToString,
                response_deserializer=service__pb2.GenderListDataResponse.FromString,
                _registered_method=True)
        self.GetGenderDataById = channel.unary_unary(
                '/GenderService/GetGenderDataById',
                request_serializer=service__pb2.GendersDataRequestById.SerializeToString,
                response_deserializer=service__pb2.GenderResponse.FromString,
                _registered_method=True)


class GenderServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetGenderData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGenderDataById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GenderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetGenderData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGenderData,
                    request_deserializer=service__pb2.GendersDataRequest.FromString,
                    response_serializer=service__pb2.GenderListDataResponse.SerializeToString,
            ),
            'GetGenderDataById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGenderDataById,
                    request_deserializer=service__pb2.GendersDataRequestById.FromString,
                    response_serializer=service__pb2.GenderResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'GenderService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('GenderService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class GenderService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetGenderData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/GenderService/GetGenderData',
            service__pb2.GendersDataRequest.SerializeToString,
            service__pb2.GenderListDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetGenderDataById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/GenderService/GetGenderDataById',
            service__pb2.GendersDataRequestById.SerializeToString,
            service__pb2.GenderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class NivelServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetNivelData = channel.unary_unary(
                '/NivelService/GetNivelData',
                request_serializer=service__pb2.NivelDataRequest.SerializeToString,
                response_deserializer=service__pb2.NivelListDataResponse.FromString,
                _registered_method=True)
        self.GetNivelDataById = channel.unary_unary(
                '/NivelService/GetNivelDataById',
                request_serializer=service__pb2.NivelDataRequestById.SerializeToString,
                response_deserializer=service__pb2.NivelResponse.FromString,
                _registered_method=True)


class NivelServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetNivelData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNivelDataById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NivelServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetNivelData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNivelData,
                    request_deserializer=service__pb2.NivelDataRequest.FromString,
                    response_serializer=service__pb2.NivelListDataResponse.SerializeToString,
            ),
            'GetNivelDataById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNivelDataById,
                    request_deserializer=service__pb2.NivelDataRequestById.FromString,
                    response_serializer=service__pb2.NivelResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'NivelService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('NivelService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class NivelService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetNivelData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/NivelService/GetNivelData',
            service__pb2.NivelDataRequest.SerializeToString,
            service__pb2.NivelListDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetNivelDataById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/NivelService/GetNivelDataById',
            service__pb2.NivelDataRequestById.SerializeToString,
            service__pb2.NivelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class GoalServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetGoalsData = channel.unary_unary(
                '/GoalService/GetGoalsData',
                request_serializer=service__pb2.GoalDataRequest.SerializeToString,
                response_deserializer=service__pb2.GoalListDataResponse.FromString,
                _registered_method=True)
        self.GetGoalDataById = channel.unary_unary(
                '/GoalService/GetGoalDataById',
                request_serializer=service__pb2.GoalDataRequestById.SerializeToString,
                response_deserializer=service__pb2.GoalResponse.FromString,
                _registered_method=True)


class GoalServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetGoalsData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGoalDataById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GoalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetGoalsData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGoalsData,
                    request_deserializer=service__pb2.GoalDataRequest.FromString,
                    response_serializer=service__pb2.GoalListDataResponse.SerializeToString,
            ),
            'GetGoalDataById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGoalDataById,
                    request_deserializer=service__pb2.GoalDataRequestById.FromString,
                    response_serializer=service__pb2.GoalResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'GoalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('GoalService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class GoalService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetGoalsData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/GoalService/GetGoalsData',
            service__pb2.GoalDataRequest.SerializeToString,
            service__pb2.GoalListDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetGoalDataById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/GoalService/GetGoalDataById',
            service__pb2.GoalDataRequestById.SerializeToString,
            service__pb2.GoalResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
